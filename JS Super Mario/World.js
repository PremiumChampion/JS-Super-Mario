"use strict";
var gameRestart;
var filledSpaces = [];
var finish;
var leveldesign = [




    "#####################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################W#########################################################W###############W############################################################################################################W##################################################################################################################################################E###E#######F###################E###############################################################HHHHHHHHHHHHHHHHHHHHHHH###F######F###HHHHHHH########################HHHHHH#######E##F#####FE####F###HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH#HHHHHH#######HHHHHHH##E#HHHHHHHHHHHHHHH#HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH######HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH#######################################################################################################"
];

var level = 0;

class block {
    constructor(posx, posy, blockType_) {
        this.positionx = posx;
        this.positiony = posy;
        this.blockType = blockType_;
        var blck = Math.floor(posy / 16) * 100 + Math.floor(posx / 16);

        if (blockType_ === "FNSH") {
            finish = blck;
        }

        if (blockType_ === "PPE") {
            ppeIntervalls.push(
                setInterval(function () {
                    if (mario.HasBuff() != "FREEZE") {
                        enemys.push(new enemy(blck - 100));
                        setTimeout(function () {
                            for (let index = 0; index < enemys.length; index++) {
                                if (enemys[index].id === blck - 100) {
                                    enemys[index].die();
                                    enemys.splice(index, 1);
                                    break;
                                }
                            }
                        }, 60000);
                    }
                }, 5000));
        }

        filledSpaces.push(blck);
    }

    draw() {
        ctx.drawImage(this.GetType(), this.positionx, this.positiony);
    }

    clear() {
        ctx.clearRect(this.positionx, this.positiony, 16, 16);
    }

    GetType() {
        var img = new Image();
        switch (this.blockType) {
            case "BDN":
                img.src = 'Img/BDN.png';
                break;
            case "FNSH":
                img.src = 'Img/FNSH.png';
                break;
            case "NRML":
                img.src = 'Img/NRML.png';
                break;
            case "PPE":
                img.src = 'Img/PPE.png';
                break;
            case "QSTN":
                img.src = 'Img/QSTN.png';
                break;
        }
        return img;
    }

}

function IsFreeSpace(posx, posy, query) {

    if(query.type === "player"){
        posy = posy -2;
    }else{
        posy--;
    }

    if(posx > 1){
        posx--;
    }

    var blockOL = Math.floor((posy) / 16) * 100 + Math.floor((posx) / 16);
    var blockOR = blockOL + 1;
    var blockUR = blockOL + 100;
    var blockUL = blockOL + 101;
    var result = 1;

    for (var i = 0; i < filledSpaces.length; i++) {

        if (filledSpaces[i] === blockOL || filledSpaces[i] === blockOR || filledSpaces[i] === blockUL || filledSpaces[i] === blockUR) {
            result = 0;
        }

        if (query.type === "boss" && query.walkingDirection === "RIGHT") {
            if (filledSpaces[i] === blockOL || filledSpaces[i] === blockOR ||
                filledSpaces[i] === blockUL - 2 || filledSpaces[i] === blockUR) {
                result = 0;
            }
        }
    }
    
    if ((finish === blockOL || finish === blockOR ||
        finish === blockUL || finish === blockUR) && query.type === "player") {
            result = 2;
        }

    return result;
}

function BossAlive() {
    for (let count = 0; count < enemys.length; count++) {
        
        if(enemys[count].type === "boss"){
            return true;
        }
    }
    return false;
}

function GetBlock() {

    canvas.addEventListener("click", function (evt) {

        if (document.getElementById("EDIT").innerHTML === "RESUME") {

            var mousePos = getMousePos(canvas, evt);
            var blck = Math.floor(mousePos.y / 16) * 100 + Math.floor(mousePos.x / 16);
            var tmpx = blck % 100;
            var tmpy = Math.floor(blck / 100);
            var blockType;

            switch (blcktyp) {

                case "BDN":
                    blockType = "BDN";
                    mapdesign.push(blck);
                    break;

                case "PPE":
                    blockType = "PPE";
                    mapdesignPPE.push(blck);
                    break;

                case "NRML":
                    blockType = "NRML";
                    mapdesignNRML.push(blck);
                    break;

                case "QSTN":
                    blockType = "QSTN";
                    mapdesignQSTN.push(blck);
                    break;

                case "ENEMY":
                    enemydesign.push(blck);
                    enemys.push(new enemy(blck));
                    enemys[enemys.length - 1].draw();
                    break;
            }

            if (blcktyp != "ENEMY") {
                var tmpbck = new block(tmpx * 16, tmpy * 16, blockType);
                tmpbck.draw();
            }
        }
    }, false);

}

function getMousePos(canvas, evt) {

    var rect = canvas.getBoundingClientRect();

    return {
        x: evt.clientX - rect.left,
        y: evt.clientY - rect.top
    };
}

function generateMap() {

    mario.DrawLive();
    mario.move(0, 480);

    //FLOOR
    for (let index = 0; index < 100; index++) {
        var tmp = index * 16;
        var tmpbck = new block(tmp, 496, "BDN");
        tmpbck.draw();
        if (tmpx % 50 === 0 && blck < heighestblck || tmpx % 51 === 0 && blck < heighestblck) {
            heighestblck = blck;
        }
    }

    //BDN
    for (var i = 0; i < mapdesign.length; i++) {
        var blck = mapdesign[i];
        var tmpx = blck % 100;
        var tmpy = Math.floor(blck / 100);
        var tmpbck = new block(tmpx * 16, tmpy * 16, "BDN");

        if (tmpx % 50 === 0 && blck < heighestblck || tmpx % 51 === 0 && blck < heighestblck) {

            heighestblck = blck;
        }

        tmpbck.draw();
    }

    //PPE
    for (var i = 0; i < mapdesignPPE.length; i++) {
        var blck = mapdesignPPE[i];
        var tmpx = blck % 100;
        var tmpy = Math.floor(blck / 100);
        var tmpbck = new block(tmpx * 16, tmpy * 16, "PPE");

        if (tmpx % 50 === 0 && blck < heighestblck || tmpx % 51 === 0 && blck < heighestblck) {

            heighestblck = blck;
        }

        tmpbck.draw();
    }

    //NRML
    for (var i = 0; i < mapdesignNRML.length; i++) {
        var blck = mapdesignNRML[i];
        var tmpx = blck % 100;
        var tmpy = Math.floor(blck / 100);
        var tmpbck = new block(tmpx * 16, tmpy * 16, "NRML");

        if (tmpx % 50 === 0 && blck < heighestblck || tmpx % 51 === 0 && blck < heighestblck) {

            heighestblck = blck;
        }

        tmpbck.draw();
    }

    //QSTN
    for (var i = 0; i < mapdesignQSTN.length; i++) {
        var blck = mapdesignQSTN[i];
        var tmpx = blck % 100;
        var tmpy = Math.floor(blck / 100);
        var tmpbck = new block(tmpx * 16, tmpy * 16, "QSTN");

        if (tmpx % 50 === 0 && blck < heighestblck || tmpx % 51 === 0 && blck < heighestblck) {

            heighestblck = blck;
        }

        tmpbck.draw();
    }

    //Finish
    var blck = 3099;
    var tmpx = blck % 100;
    var tmpy = Math.floor(blck / 100);
    var tmpbck = new block(tmpx * 16, tmpy * 16, "FNSH");
    tmpbck.draw();

    //ENEMYS
    for (var index = 0; index < enemydesign.length; index++) {
        enemys.push(new enemy(enemydesign[index]));
    }

    if (Math.floor(Math.random() * 5) + 1 === 5 || false) {

        enemys.push(new enemy(heighestblck - 100, "boss"));

        bossFire = setInterval(function () {

            for (let inde = 0; inde < enemys.length; inde++) {

                if (enemys[inde].type === "boss") {
                    var testbul = enemys[inde].positionx - mario.positionx;
                    if (testbul < 400 && testbul > -400) {
                        // var tmpbullet3 = new bullet(enemys[inde].positionx, enemys[inde].positiony, enemys[inde].walkingDirection === "LEFT" ? "LFT" : "RGT", "enemy");
                        // tmpbullet3.Interval = setInterval(function () { tmpbullet3.move() }, 20);
                        
                        tmpbullet2 = new bullet((enemys[inde].positionx - enemys[inde].walkingDirection === "LEFT" ? 32 : 0), enemys[inde].positiony - 16, enemys[inde].walkingDirection === "LEFT" ? "LFT" : "RGT", "enemy");
                        tmpbullet2.Intervall = setInterval(function () { tmpbullet2.move() }, 20);
                        //console.log("buk");
                    }
                }
            }
        }, 3000);
    }

    //Start Intervalls
    playerMovement = setInterval(function () { movePlayer() }, 10);
    enemyMovement = setInterval(function () { moveEnemys() }, 50);

}